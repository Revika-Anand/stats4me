name: stats4me

services:

  # data collection
  telegraf:
    container_name: telegraf
    image: telegraf:1.27-alpine
    restart: unless-stopped
    hostname: ${HOSTNAME:-telegraf}
    user: telegraf:${DOCKER_GID}
    networks:
      - stats4me
    volumes:
      - telegraf:/etc/telegraf:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - /:/hostfs:ro
    environment:
      - HOST_ETC=/hostfs/etc
      - HOST_PROC=/hostfs/proc
      - HOST_SYS=/hostfs/sys
      - HOST_VAR=/hostfs/var
      - HOST_RUN=/hostfs/run
      - HOST_MOUNT_PREFIX=/hostfs
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN}
      - INFLUXDB_ORG=${INFLUXDB_ORG}
      - INFLUXDB_BUCKET=${INFLUXDB_BUCKET}

  # data storage
  influxdb:
    container_name: influxdb
    image: influxdb:2.7-alpine
    restart: unless-stopped
    networks:
      - default
      - stats4me
    ports:
      - 8086:8086/tcp
    volumes:
      - influxdb-data:/var/lib/influxdb2/
      - influxdb-etc:/etc/influxdb2
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_USERNAME}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_PASSWORD}
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_ORG}
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_BUCKET}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_TOKEN}
    
  loki:
    container_name: loki
    image: grafana/loki:2.6.1
    restart: unless-stopped
    user: root
    ports:
      - "3100"
    networks:
      - default
      - stats4me
    volumes:
      # directory must be created first, with uid:gid 10001:10001
      - loki:/loki

  promtail:
    container_name: promtail
    image: grafana/promtail:2.6.1
    restart: unless-stopped
    user: root
    networks:
      - default
      - stats4me
    volumes:
      # custom config will read logs from the containers of
      # this project
      - ./loki/promtail-config.yml:/etc/promtail/config.yml
      # to read container labels and logs
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/containers:/var/lib/docker/containers
      - promtail:/var/log

  # data visualisation
  grafana:
    container_name: grafana
    image: grafana/grafana:11.0.0
    restart: unless-stopped
    user: root
    networks:
      - default
      - stats4me
    ports:
      - 3000:3000
    volumes:
      - grafana:/var/lib/grafana/
      - ./loki/grafana/provisioning/:/etc/grafana/provisioning/
    environment:
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource

networks:

  # local network for "internal" communication
  stats4me:
    driver: bridge
    attachable: true

  # network for "access" to "public" services
  default:
    driver: bridge

volumes:

  # stores the telegraf configuration
  telegraf:
    driver: local
    driver_opts:
      type: none
      device: ./telegraf
      o: bind

  # stores the whole time series database
  influxdb-data:
    driver: local
    driver_opts:
      type: none
      device: ./influxdb-data
      o: bind

  # stores the influxdb configuration
  influxdb-etc:
    driver: local
    driver_opts:
      type: none
      device: ./influxdb-etc
      o: bind

  # stores the grafana configuration
  grafana:
    driver: local
    driver_opts:
      type: none
      device: ./grafana
      o: bind

  loki:
    driver: local
    driver_opts:
      type: none
      device: ./loki
      o: bind

  promtail:
    driver: local
    driver_opts:
      type: none
      device: ./promtail
      o: bind
